/**
 * Marketing Cloud REST API
 * Marketing Cloud's REST API is our newest API. It supports multi-channel use cases, is much more lightweight and easy to use than our SOAP API, and is getting more comprehensive with every release.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mc_sdk@salesforce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SalesforceMarketingCloud);
  }
}(this, function(expect, SalesforceMarketingCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SalesforceMarketingCloud.TransactionalMessagingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransactionalMessagingApi', function() {
    describe('createEmailDefinition', function() {
      it('should call createEmailDefinition successfully', function(done) {
        //uncomment below and update the code to test createEmailDefinition
        //instance.createEmailDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSmsDefinition', function() {
      it('should call createSmsDefinition successfully', function(done) {
        //uncomment below and update the code to test createSmsDefinition
        //instance.createSmsDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEmailDefinition', function() {
      it('should call deleteEmailDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteEmailDefinition
        //instance.deleteEmailDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQueuedMessagesForEmailDefinition', function() {
      it('should call deleteQueuedMessagesForEmailDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteQueuedMessagesForEmailDefinition
        //instance.deleteQueuedMessagesForEmailDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQueuedMessagesForSmsDefinition', function() {
      it('should call deleteQueuedMessagesForSmsDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteQueuedMessagesForSmsDefinition
        //instance.deleteQueuedMessagesForSmsDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSmsDefinition', function() {
      it('should call deleteSmsDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteSmsDefinition
        //instance.deleteSmsDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEmailDefinition', function() {
      it('should call getEmailDefinition successfully', function(done) {
        //uncomment below and update the code to test getEmailDefinition
        //instance.getEmailDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEmailDefinitions', function() {
      it('should call getEmailDefinitions successfully', function(done) {
        //uncomment below and update the code to test getEmailDefinitions
        //instance.getEmailDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEmailSendStatusForRecipient', function() {
      it('should call getEmailSendStatusForRecipient successfully', function(done) {
        //uncomment below and update the code to test getEmailSendStatusForRecipient
        //instance.getEmailSendStatusForRecipient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEmailsNotSentToRecipients', function() {
      it('should call getEmailsNotSentToRecipients successfully', function(done) {
        //uncomment below and update the code to test getEmailsNotSentToRecipients
        //instance.getEmailsNotSentToRecipients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQueueMetricsForEmailDefinition', function() {
      it('should call getQueueMetricsForEmailDefinition successfully', function(done) {
        //uncomment below and update the code to test getQueueMetricsForEmailDefinition
        //instance.getQueueMetricsForEmailDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQueueMetricsForSmsDefinition', function() {
      it('should call getQueueMetricsForSmsDefinition successfully', function(done) {
        //uncomment below and update the code to test getQueueMetricsForSmsDefinition
        //instance.getQueueMetricsForSmsDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSMSsNotSentToRecipients', function() {
      it('should call getSMSsNotSentToRecipients successfully', function(done) {
        //uncomment below and update the code to test getSMSsNotSentToRecipients
        //instance.getSMSsNotSentToRecipients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSmsDefinition', function() {
      it('should call getSmsDefinition successfully', function(done) {
        //uncomment below and update the code to test getSmsDefinition
        //instance.getSmsDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSmsDefinitions', function() {
      it('should call getSmsDefinitions successfully', function(done) {
        //uncomment below and update the code to test getSmsDefinitions
        //instance.getSmsDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSmsSendStatusForRecipient', function() {
      it('should call getSmsSendStatusForRecipient successfully', function(done) {
        //uncomment below and update the code to test getSmsSendStatusForRecipient
        //instance.getSmsSendStatusForRecipient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partiallyUpdateEmailDefinition', function() {
      it('should call partiallyUpdateEmailDefinition successfully', function(done) {
        //uncomment below and update the code to test partiallyUpdateEmailDefinition
        //instance.partiallyUpdateEmailDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partiallyUpdateSmsDefinition', function() {
      it('should call partiallyUpdateSmsDefinition successfully', function(done) {
        //uncomment below and update the code to test partiallyUpdateSmsDefinition
        //instance.partiallyUpdateSmsDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendEmailToMultipleRecipients', function() {
      it('should call sendEmailToMultipleRecipients successfully', function(done) {
        //uncomment below and update the code to test sendEmailToMultipleRecipients
        //instance.sendEmailToMultipleRecipients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendEmailToSingleRecipient', function() {
      it('should call sendEmailToSingleRecipient successfully', function(done) {
        //uncomment below and update the code to test sendEmailToSingleRecipient
        //instance.sendEmailToSingleRecipient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendSmsToMultipleRecipients', function() {
      it('should call sendSmsToMultipleRecipients successfully', function(done) {
        //uncomment below and update the code to test sendSmsToMultipleRecipients
        //instance.sendSmsToMultipleRecipients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendSmsToSingleRecipient', function() {
      it('should call sendSmsToSingleRecipient successfully', function(done) {
        //uncomment below and update the code to test sendSmsToSingleRecipient
        //instance.sendSmsToSingleRecipient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
